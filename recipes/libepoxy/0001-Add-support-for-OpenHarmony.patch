From 79c58bdd0f84e1c9597e54dcc2f75ccc16fc66d6 Mon Sep 17 00:00:00 2001
From: Jani Hautakangas <jani@kodegood.com>
Date: Sat, 6 Sep 2025 20:41:02 +0300
Subject: [PATCH] Add support for OpenHarmony

---
 meson.build           |  2 +-
 registry/egl.xml      | 10 ++++++++++
 src/dispatch_common.c |  7 ++++++-
 3 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/meson.build b/meson.build
index c5474e0..0181b8c 100644
--- a/meson.build
+++ b/meson.build
@@ -36,7 +36,7 @@ conf.set('HAVE_KHRPLATFORM_H', cc.has_header('KHR/khrplatform.h'))
 # support on Linux and Unix
 enable_glx = get_option('glx')
 if enable_glx == 'auto'
-  build_glx = not ['windows', 'darwin', 'android', 'haiku'].contains(host_system)
+  build_glx = not ['windows', 'darwin', 'android', 'haiku', 'ohos'].contains(host_system)
 else
   build_glx = enable_glx == 'yes'
 endif
diff --git a/registry/egl.xml b/registry/egl.xml
index c27f172..e441820 100644
--- a/registry/egl.xml
+++ b/registry/egl.xml
@@ -1003,6 +1003,11 @@
             <unused start="0x3491" end="0x349F"/>
     </enums>
 
+    <enums namespace="EGL" start="0x34E0" end="0x34E1" vendor="Huawei" comment="Unofficial OpenHarmony enums">
+        <enum value="0x34E0" name="EGL_PLATFORM_OHOS_KHR"/>
+        <enum value="0x34E1" name="EGL_NATIVE_BUFFER_OHOS"/>
+    </enums>
+
 <!-- Please remember that new enumerant allocations must be obtained by
      request to the Khronos API registrar (see comments at the top of this
      file) File requests in the Khronos Bugzilla, EGL project, Registry
@@ -3278,5 +3283,10 @@
                 <enum name="EGL_Y_AXIS_NV"/>
             </require>
         </extension>
+        <extension name="EGL_OHOS_image_native_buffer" supported="egl">
+            <require>
+                <enum name="EGL_NATIVE_BUFFER_OHOS"/>
+            </require>
+        </extension>
     </extensions>
 </registry>
diff --git a/src/dispatch_common.c b/src/dispatch_common.c
index 9977a02..76d29a5 100644
--- a/src/dispatch_common.c
+++ b/src/dispatch_common.c
@@ -114,7 +114,7 @@
  *      3.6. To perform the dynamic query, libGL also must export an entry
  *           point called
  *
- *           void (*glXGetProcAddressARB(const GLubyte *))(); 
+ *           void (*glXGetProcAddressARB(const GLubyte *))();
  *
  *      The full specification of this function is available separately. It
  *      takes the string name of a GL or GLX entry point and returns a pointer
@@ -183,6 +183,11 @@
 #define EGL_LIB "libEGL.so"
 #define GLES1_LIB "libGLESv1_CM.so"
 #define GLES2_LIB "libGLESv2.so"
+#elif defined(__OHOS__)
+#define GLX_LIB "libGLESv2.so"
+#define EGL_LIB "libEGL.so"
+#define GLES1_LIB "libGLESv1_CM.so" // Not actually supported and does not exists
+#define GLES2_LIB "libGLESv3.so"
 #elif defined(_WIN32)
 #define EGL_LIB "libEGL.dll"
 #define GLES1_LIB "libGLES_CM.dll"
-- 
2.48.1

